import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
df=pd.read_csv("/content/diabetes.csv")
print(df.head(10))
scaler=StandardScaler()
scaled_data=scaler.fit_transform(df)
inertia=[]
k_values=range(1,11)
for k in k_values:
  km=KMeans(n_clusters=k)
  km.fit(scaled_data)
  inertia.append(km.inertia_)
plt.plot(k_values,inertia)
km=KMeans(n_clusters=2)
y_pred=km.fit_predict(scaled_data)
df["cluster"]=y_pred
#because we have more than 2 feature we have to use decomposition to make our visualization possible
from sklearn.decomposition import PCA

# Perform PCA to reduce data to two dimensions
pca = PCA(n_components=2)
pca_df = pca.fit_transform(scaled_data)

# Plot the clusters in PCA-reduced 2D space
plt.figure(figsize=(8, 6))
plt.scatter(pca_df[:, 0], pca_df[:, 1], c=df['cluster'], cmap='viridis')
plt.xlabel('PCA Component 1')
plt.ylabel('PCA Component 2')
plt.title('K-Means Clustering with PCA-reduced dimensions')
plt.show()
